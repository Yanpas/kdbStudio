apply plugin: 'idea'
//and standard one
apply plugin: 'java'
apply plugin: 'application'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    compile group: 'org.netbeans.api', name: 'org-openide-awt', version: 'RELEASE113'
    compile group: 'org.jfree', name: 'jfreechart', version: '1.0.14'
    runtime files ('lib/images.jar')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
        resources {
            srcDirs 'src','images'
            include 'log4j2.xml'
            include 'studio*.properties'
            include 'org/netbeans/editor/Bundle*.properties'
            include '*.png'
            include 'notes.md'
            include 'build.txt'
        }
    }
    test {
        java {
            srcDirs 'test'
        }
        resources {
            srcDirs 'test'
            include 'syntax.csv'
        }
    }
}

test {
    useJUnitPlatform()
}

application {
    mainClassName = 'studio.core.Studio'
}

task getBuildHash {
    def stdout = new ByteArrayOutputStream()
    exec{
        commandLine 'git'
        args 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
        ignoreExitValue = true
    }
    file('src/build.txt').text = stdout.size() == 0 ? "unknown" : stdout;
}

processResources.dependsOn('getBuildHash')